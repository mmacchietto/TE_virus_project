## Repeat subfamily and gene differential expression analysis code for human virus data sets that were quantified with TEtranscripts

##########################################################################################
##########################################################################################
##
## TEtranscripts - EBV (DE repeats and genes during EBV infection) - HUMAN 
##
##########################################################################################
##########################################################################################

library(edgeR)
### Load data
data <- read.delim("/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/noSRs/TEtrans_EBV.cntTable",sep="\t",header=TRUE,row.names="gene.TE")
colnames(data) <- sub("bams.","",colnames(data))
colnames(data) <- sub("Aligned.sortedByCoord.out.bam.C","",colnames(data))
colnames(data) <- sub("Aligned.sortedByCoord.out.bam.T","",colnames(data))

hg38.viruses <- read.delim("/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/virus.genes.hg38.txt",sep="\t",header=FALSE)

ebv_cpm <- cpm(data)
data <- data[!rownames(data) %in% hg38.viruses$V1,]
y <- DGEList(counts=data,group=c(1,1,1,2,2,2))
keep <- rowSums(cpm(y)>1) >= 3
y <- y[keep, , keep.lib.sizes=FALSE]
y <- calcNormFactors(y)
y <- estimateDisp(y)
y <- estimateCommonDisp(y)
y <- estimateTagwiseDisp(y)
et <- exactTest(y)
tt <- topTags(et,n=dim(data)[1])
tt <- tt$table
test <- subset(tt,!grepl("^EN",rownames(tt)))
test <- test[test$FDR < 0.05,]
data_reps <- data[rownames(data) %in% rownames(test),]
ebv_cpm_de <- ebv_cpm[rownames(ebv_cpm) %in% rownames(test),]
#ebv_tpm_de <- ebv_tpm[rownames(ebv_tpm) %in% rownames(test),]
EBV <- test
test2 <- subset(tt,grepl("^EN",rownames(tt)))
test2 <- test2[test2$FDR < 0.05,]
EBVg <- test2
test <- test[test$FDR < 0.05,]


# EBV only has 108 DE genes, but the top significant one is  ENSG00000187908 (DMBT1 - deleted in malignant brain tumors 1) which is downregulated in EBV.
#Indicates that EBV is transforming cells.


write.table(test,"/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/noSRs/results_newthres/DEreps_TEtrans_EBV_FDR0.05.txt",sep="\t",quote=FALSE)
write.table(test2,"/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/noSRs/results_newthres/DEgenes_TEtrans_EBV_FDR0.05.txt",sep="\t",quote=FALSE)


print("EBV")
# repeats that are up and down
dim(EBV)
upEBV_mock <- EBV[EBV$logFC < 0,]
dim(upEBV_mock)
downEBV_mock <- EBV[EBV$logFC > 0,]
dim(downEBV_mock)

dim(test)
dim(test2)
upEBV_mock<- do.call(rbind,strsplit(as.character(rownames(upEBV_mock)),":"))
downEBV_mock <- do.call(rbind,strsplit(as.character(rownames(downEBV_mock)),":"))
table(upEBV_mock[,3])
table(downEBV_mock[,3])

upEBV_mock_g <- EBVg[EBVg$logFC < 0,]
downEBV_mock_g <- EBVg[EBVg$logFC > 0,]


##########################################################################################
##########################################################################################
##
## TEtranscripts - HPV - HUMAN 
##
##########################################################################################
##########################################################################################


### Load data
data <- read.delim("/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/noSRs/TEtrans_HPV.cntTable",sep="\t",header=TRUE,row.names="gene.TE")
colnames(data) <- sub("bams.","",colnames(data))
colnames(data) <- sub("Aligned.sortedByCoord.out.bam.C","",colnames(data))
colnames(data) <- sub("Aligned.sortedByCoord.out.bam.T","",colnames(data))

### differential expression analysis 

library(edgeR)

# create normalized count matrix
data <- data[!rownames(data) %in% hg38.viruses$V1,]
hpv_cpm <- cpm(data)

y <- DGEList(counts=data,group=c(1,1,2,2))
keep <- rowSums(cpm(y)>1) >= 2
y <- y[keep, , keep.lib.sizes=FALSE]
y <- calcNormFactors(y)
y <- estimateDisp(y)
y <- estimateCommonDisp(y)
y <- estimateTagwiseDisp(y)
et <- exactTest(y)
tt <- topTags(et,n=dim(data)[1])
tt <- tt$table
test <- subset(tt,!grepl("^EN",rownames(tt)))
test <- test[test$FDR < 0.05,]
data_reps <- data[rownames(data) %in% rownames(test),]
hpv_cpm_de <- hpv_cpm[rownames(hpv_cpm) %in% rownames(test),]
HPV <- test
test2 <- subset(tt,grepl("^EN",rownames(tt)))
test2 <- test2[test2$FDR < 0.05,]
HPVg <- test2

write.table(test,"/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/noSRs/results_newthres/DEreps_TEtrans_HPV_FDR0.05.txt",sep="\t",quote=FALSE)
write.table(test2,"/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/noSRs/results_newthres/DEgenes_TEtrans_HPV_FDR0.05.txt",sep="\t",quote=FALSE)

print("HPV")
# repeats that are up and down
dim(HPV)
upHPV_mock <- HPV[HPV$logFC < 0,]
dim(upHPV_mock)
downHPV_mock <- HPV[HPV$logFC > 0,]
dim(downHPV_mock)


upHPV_mock<- do.call(rbind,strsplit(as.character(rownames(upHPV_mock)),":"))
downHPV_mock <- do.call(rbind,strsplit(as.character(rownames(downHPV_mock)),":"))
table(upHPV_mock[,3])
table(downHPV_mock[,3])

upHPV_mock_g <- HPVg[HPVg$logFC < 0,]
downHPV_mock_g <- HPVg[HPVg$logFC > 0,]

dim(test)
dim(test2)




##########################################################################################
##########################################################################################
##
## TEtranscripts - HCV - HUMAN 
##
##########################################################################################
##########################################################################################


### Load data
data <- read.delim("/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/noSRs/TEtrans_HCV.cntTable",sep="\t",header=TRUE,row.names="gene.TE")
colnames(data) <- sub("bams.","",colnames(data))
colnames(data) <- sub("Aligned.sortedByCoord.out.bam.C","",colnames(data))
colnames(data) <- sub("Aligned.sortedByCoord.out.bam.T","",colnames(data))

###  List virus genes, rRNAs

###  Virus IDs
hg38.viruses <- read.delim("/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/virus.genes.hg38.txt",sep="\t",header=FALSE)


### differential expression analysis 

library(edgeR)

# create normalized count matrix
hcv_cpm <- cpm(data)
#hcv_tpm <- tpm(data,master_gene_hg38)

data <- data[!rownames(data) %in% hg38.viruses$V1,]
y <- DGEList(counts=data,group=c(1,1,1,1,1,2,2,2,2,2))
keep <- rowSums(cpm(y)>1) >= 5
y <- y[keep, , keep.lib.sizes=FALSE]
y <- calcNormFactors(y)
y <- estimateDisp(y)
y <- estimateCommonDisp(y)
y <- estimateTagwiseDisp(y)
et <- exactTest(y)
tt <- topTags(et,n=dim(data)[1])
tt <- tt$table
test <- subset(tt,!grepl("^EN",rownames(tt)))
test <- test[test$FDR < 0.05,]
data_reps <- data[rownames(data) %in% rownames(test),]
hcv_cpm_de <- hcv_cpm[rownames(hcv_cpm) %in% rownames(test),]
HCV <- test
test2 <- subset(tt,grepl("^EN",rownames(tt)))
test2 <- test2[test2$FDR < 0.05,]
HCVg <- test2

write.table(HCV,"/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/noSRs/results_newthres/DEreps_TEtrans_HCV_FDR0.05.txt",sep="\t",quote=FALSE)
write.table(HCVg,"/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/noSRs/results_newthres/DEgenes_TEtrans_HCV_FDR0.05.txt",sep="\t",quote=FALSE)


print("HCV")
# repeats that are up and down
dim(HCV)
upHCV_mock <- HCV[HCV$logFC < 0,]
dim(upHCV_mock)
downHCV_mock <- HCV[HCV$logFC > 0,]
dim(downHCV_mock)


upHCV_mock<- do.call(rbind,strsplit(as.character(rownames(upHCV_mock)),":"))
downHCV_mock <- do.call(rbind,strsplit(as.character(rownames(downHCV_mock)),":"))
table(upHCV_mock[,3])
table(downHCV_mock[,3])


upHCV_mock<- do.call(rbind,strsplit(as.character(rownames(upHCV_mock)),":"))
downHCV_mock <- do.call(rbind,strsplit(as.character(rownames(downHCV_mock)),":"))
table(upHCV_mock[,3])
table(downHCV_mock[,3])

upHCV_mock_g <- HCVg[HCVg$logFC < 0,]
downHCV_mock_g <- HCVg[HCVg$logFC > 0,]
dim(upHCV_mock_g)
dim(downHCV_mock_g)

dim(test)
dim(test2)

##########################################################################################
##########################################################################################
##
## TEtranscripts - HIV in resting T cells- HUMAN 
##
##########################################################################################
##########################################################################################


### Load data
data <- read.delim("/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/noSRs/TEtrans_HIV.cntTable",sep="\t",header=TRUE,row.names="gene.TE")
colnames(data) <- sub("bams.","",colnames(data))
colnames(data) <- sub("Aligned.sortedByCoord.out.bam.C","",colnames(data))
colnames(data) <- sub("Aligned.sortedByCoord.out.bam.T","",colnames(data))

###  List virus genes, rRNAs

###  Virus IDs
hg38.viruses <- read.delim("/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/virus.genes.hg38.txt",sep="\t",header=FALSE)



### differential expression analysis 

library(edgeR)

# create normalized count matrix
hiv_rest_cpm <- cpm(data)

data1 <- data[,c(2,4,6,7,10,11)] # resting
data1 <- data1[!rownames(data1) %in% hg38.viruses$V1,]
y <- DGEList(counts=data1,group=c(1,1,1,2,2,2))
keep <- rowSums(cpm(y)>1) >= 3
y <- y[keep, , keep.lib.sizes=FALSE]
y <- calcNormFactors(y)
y <- estimateDisp(y)
y <- estimateCommonDisp(y)
y <- estimateTagwiseDisp(y)
et <- exactTest(y)
tt <- topTags(et,n=dim(data)[1])
tt <- tt$table
test <- subset(tt,!grepl("^EN",rownames(tt)))
test <- test[test$FDR < 0.05,]
data_reps <- data[rownames(data) %in% rownames(test),]
hiv_rest_cpm_de <- hiv_rest_cpm[rownames(hiv_rest_cpm) %in% rownames(test),]
HIV_rest <- test
test2 <- subset(tt,grepl("^EN",rownames(tt)))
test2 <- test2[test2$FDR < 0.05,]
HIV_restg <- test2


write.table(HIV_rest,"/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/noSRs/results_newthres/DEreps_TEtrans_HIVrest_FDR0.05.txt",sep="\t",quote=FALSE)
write.table(HIV_restg,"/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/noSRs/results_newthres/DEgenes_TEtrans_HIVrest_FDR0.05.txt",sep="\t",quote=FALSE)


print("HIVrest")
# repeats that are up and down
dim(HIV_rest)
upHIV_rest_mock <- HIV_rest[HIV_rest$logFC < 0,]
dim(upHIV_rest_mock)
downHIV_rest_mock <- HIV_rest[HIV_rest$logFC > 0,]
dim(downHIV_rest_mock)

upHIV_rest_mock<- do.call(rbind,strsplit(as.character(rownames(upHIV_rest_mock)),":"))
downHIV_rest_mock <- do.call(rbind,strsplit(as.character(rownames(downHIV_rest_mock)),":"))
table(upHIV_rest_mock[,3])
table(downHIV_rest_mock[,3])

upHIV_rest_mock_g <- HIV_restg[HIV_restg$logFC < 0,]
downHIV_rest_mock_g <- HIV_restg[HIV_restg$logFC > 0,]
dim(upHIV_rest_mock_g)
dim(downHIV_rest_mock_g)

dim(test)
dim(test2)



##########################################################################################
##########################################################################################
##
## TEtranscripts - HIV in activated T cells- HUMAN 
##
##########################################################################################
##########################################################################################



### Load data
data <- read.delim("/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/noSRs/TEtrans_HIV.cntTable",sep="\t",header=TRUE,row.names="gene.TE")
colnames(data) <- sub("bams.","",colnames(data))
colnames(data) <- sub("Aligned.sortedByCoord.out.bam.C","",colnames(data))
colnames(data) <- sub("Aligned.sortedByCoord.out.bam.T","",colnames(data))

###  List virus genes, rRNAs

###  Virus IDs
hg38.viruses <- read.delim("/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/virus.genes.hg38.txt",sep="\t",header=FALSE)



### differential expression analysis 

library(edgeR)

# create normalized count matrix
hiv_act_cpm <- cpm(data)

data2 <- data[,c(1,3,5,8,9,12)] # activated
data2 <- data2[!rownames(data2) %in% hg38.viruses$V1,]
y <- DGEList(counts=data2,group=c(1,1,1,2,2,2))
keep <- rowSums(cpm(y)>1) >= 3
y <- y[keep, , keep.lib.sizes=FALSE]
y <- calcNormFactors(y)
y <- estimateDisp(y)
y <- estimateCommonDisp(y)
y <- estimateTagwiseDisp(y)
et <- exactTest(y)
tt <- topTags(et,n=dim(data)[1])
tt <- tt$table
test <- subset(tt,!grepl("^EN",rownames(tt)))
test <- test[test$FDR < 0.05,]
data_reps <- data[rownames(data) %in% rownames(test),]
hiv_act_cpm_de <- hiv_act_cpm[rownames(hiv_act_cpm) %in% rownames(test),]
HIV_act <- test
test2 <- subset(tt,grepl("^EN",rownames(tt)))
test2 <- test2[test2$FDR < 0.05,]
HIV_actg <- test2

write.table(HIV_act,"/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/noSRs/results_newthres/DEreps_TEtrans_HIVact_FDR0.05.txt",sep="\t",quote=FALSE)
write.table(HIV_actg,"/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/noSRs/results_newthres/DEgenes_TEtrans_HIVact_FDR0.05.txt",sep="\t",quote=FALSE)


print("HIVact")
# repeats that are up and down
dim(HIV_act)
upHIV_act_mock <- HIV_act[HIV_act$logFC < 0,]
dim(upHIV_act_mock)
downHIV_act_mock <- HIV_act[HIV_act$logFC > 0,]
dim(downHIV_act_mock)


upHIV_act_mock<- do.call(rbind,strsplit(as.character(rownames(upHIV_act_mock)),":"))
downHIV_act_mock <- do.call(rbind,strsplit(as.character(rownames(downHIV_act_mock)),":"))
table(upHIV_act_mock[,3])
table(downHIV_act_mock[,3])

upHIV_act_mock_g <- HIV_actg[HIV_actg$logFC < 0,]
downHIV_act_mock_g <- HIV_actg[HIV_actg$logFC > 0,]
dim(upHIV_act_mock_g)
dim(downHIV_act_mock_g)


dim(test)
dim(test2)




##########################################################################################
##########################################################################################
##
## TEtranscripts - KSHV in MC116 cells - HUMAN 
##
##########################################################################################
##########################################################################################


### Load data
data <- read.delim("/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/noSRs/TEtrans_KSHV_MC116.cntTable",sep="\t",header=TRUE,row.names="gene.TE")
colnames(data) <- sub("bams.","",colnames(data))
colnames(data) <- sub("Aligned.sortedByCoord.out.bam.C","",colnames(data))
colnames(data) <- sub("Aligned.sortedByCoord.out.bam.T","",colnames(data))

###  List virus genes, rRNAs

###  Virus IDs
hg38.viruses <- read.delim("/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/virus.genes.hg38.txt",sep="\t",header=FALSE)


### differential expression analysis 

library(edgeR)

# create normalized count matrix
kshv_mc116_cpm <- cpm(data)

data <- data[!rownames(data) %in% hg38.viruses$V1,]
y <- DGEList(counts=data,group=c(1,1,1,2,2,2))
keep <- rowSums(cpm(y)>1) >= 3
y <- y[keep, , keep.lib.sizes=FALSE]
y <- calcNormFactors(y)
y <- estimateDisp(y)
y <- estimateCommonDisp(y)
y <- estimateTagwiseDisp(y)
et <- exactTest(y)
tt <- topTags(et,n=dim(data)[1])
tt <- tt$table
test <- subset(tt,!grepl("^EN",rownames(tt)))
test <- test[test$FDR < 0.05,]
data_reps <- data[rownames(data) %in% rownames(test),]
kshv_mc116_cpm_de <- kshv_mc116_cpm[rownames(kshv_mc116_cpm) %in% rownames(test),]
KSHV_mc116 <- test
test2 <- subset(tt,grepl("^EN",rownames(tt)))
test2 <- test2[test2$FDR < 0.05,]
KSHV_mc116g <- test2

write.table(KSHV_mc116,"/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/noSRs/results_newthres/DEreps_TEtrans_KSHVmc116_FDR0.05.txt",sep="\t",quote=FALSE)
write.table(KSHV_mc116g,"/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/noSRs/results_newthres/DEgenes_TEtrans_KSHVmc116_FDR0.05.txt",sep="\t",quote=FALSE)



print("KSHV_mc116")
# repeats that are up and down
dim(KSHV_mc116)
upKSHV_mc116 <- KSHV_mc116[KSHV_mc116$logFC < 0,]
dim(upKSHV_mc116)
downKSHV_mc116 <- KSHV_mc116[KSHV_mc116$logFC > 0,]
dim(downKSHV_mc116)

upKSHV_mc116<- do.call(rbind,strsplit(as.character(rownames(upKSHV_mc116)),":"))
downKSHV_mc116 <- do.call(rbind,strsplit(as.character(rownames(downKSHV_mc116)),":"))
table(upKSHV_mc116[,3])
table(downKSHV_mc116[,3])

upKSHV_mc116_g <- KSHV_mc116g[KSHV_mc116g$logFC < 0,]
downKSHV_mc116_g <- KSHV_mc116g[KSHV_mc116g$logFC > 0,]
dim(upKSHV_mc116_g)
dim(downKSHV_mc116_g)

dim(test)
dim(test2)



##########################################################################################
##########################################################################################
##
## TEtranscripts - KSHV in HUVEC cells - HUMAN 
##
##########################################################################################
##########################################################################################

### Load data
data <- read.delim("/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/noSRs/TEtrans_KSHV_HUVEC.cntTable",sep="\t",header=TRUE,row.names="gene.TE")
colnames(data) <- sub("bams.","",colnames(data))
colnames(data) <- sub("Aligned.sortedByCoord.out.bam.C","",colnames(data))
colnames(data) <- sub("Aligned.sortedByCoord.out.bam.T","",colnames(data))

###  List virus genes, rRNAs

###  Virus IDs
hg38.viruses <- read.delim("/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/virus.genes.hg38.txt",sep="\t",header=FALSE)


### differential expression analysis 

library(edgeR)

# create normalized count matrix
kshv_huvec_cpm <- cpm(data)

data <- data[!rownames(data) %in% hg38.viruses$V1,]
y <- DGEList(counts=data,group=c(1,1,2,2))
keep <- rowSums(cpm(y)>1) >= 2
y <- y[keep, , keep.lib.sizes=FALSE]
y <- calcNormFactors(y)
y <- estimateDisp(y)
y <- estimateCommonDisp(y)
y <- estimateTagwiseDisp(y)
et <- exactTest(y)
tt <- topTags(et,n=dim(data)[1])
tt <- tt$table
test <- subset(tt,!grepl("^EN",rownames(tt)))
test <- test[test$FDR < 0.05,]
data_reps <- data[rownames(data) %in% rownames(test),]
kshv_huvec_cpm_de <- kshv_huvec_cpm[rownames(kshv_huvec_cpm) %in% rownames(test),]
KSHV_huvec <- test
test2 <- subset(tt,grepl("^EN",rownames(tt)))
test2 <- test2[test2$FDR < 0.05,]
KSHV_huvecg <- test2

write.table(KSHV_huvec,"/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/noSRs/results_newthres/DEreps_TEtrans_KSHVhuvec_FDR0.05.txt",sep="\t",quote=FALSE)
write.table(KSHV_huvecg,"/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/noSRs/results_newthres/DEgenes_TEtrans_KSHVhuvec_FDR0.05.txt",sep="\t",quote=FALSE)



print("KSHV_huvec")
# repeats that are up and down
dim(KSHV_huvec)
upKSHV_huvec <- KSHV_huvec[KSHV_huvec$logFC < 0,]
dim(upKSHV_huvec)
downKSHV_huvec <- KSHV_huvec[KSHV_huvec$logFC > 0,]
dim(downKSHV_huvec)

upKSHV_huvec<- do.call(rbind,strsplit(as.character(rownames(upKSHV_huvec)),":"))
downKSHV_huvec <- do.call(rbind,strsplit(as.character(rownames(downKSHV_huvec)),":"))
table(upKSHV_huvec[,3])
table(downKSHV_huvec[,3])

upKSHV_huvec_g <- KSHV_huvecg[KSHV_huvecg$logFC < 0,]
downKSHV_huvec_g <- KSHV_huvecg[KSHV_huvecg$logFC > 0,]
dim(upKSHV_huvec_g)
dim(downKSHV_huvec_g)

dim(test)
dim(test2)

##########################################################################################
##########################################################################################
##
## TEtranscripts - SENDAI - HUMAN 
##
##########################################################################################
##########################################################################################



### Load data
data <- read.delim("/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/noSRs/TEtrans_Sendai.cntTable",sep="\t",header=TRUE,row.names="gene.TE")
colnames(data) <- sub("bams.","",colnames(data))
colnames(data) <- sub("Aligned.sortedByCoord.out.bam.C","",colnames(data))
colnames(data) <- sub("Aligned.sortedByCoord.out.bam.T","",colnames(data))

###  List virus genes, rRNAs

###  Virus IDs
hg38.viruses <- read.delim("/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/virus.genes.hg38.txt",sep="\t",header=FALSE)



### differential expression analysis 

library(edgeR)

# create normalized count matrix
sendai_cpm <- cpm(data)

data <- data[!rownames(data) %in% hg38.viruses$V1,]
y <- DGEList(counts=data,group=c(1,1,2,2))
keep <- rowSums(cpm(y)>1) >= 2
y <- y[keep, , keep.lib.sizes=FALSE]
y <- calcNormFactors(y)
y <- estimateDisp(y)
y <- estimateCommonDisp(y)
y <- estimateTagwiseDisp(y)
et <- exactTest(y)
tt <- topTags(et,n=dim(data)[1])
tt <- tt$table
test <- subset(tt,!grepl("^EN",rownames(tt)))
test <- test[test$FDR < 0.05,]
data_reps <- data[rownames(data) %in% rownames(test),]
sendai_cpm_de <- sendai_cpm[rownames(sendai_cpm) %in% rownames(test),]
SENDAI <- test
test2 <- subset(tt,grepl("^EN",rownames(tt)))
test2 <- test2[test2$FDR < 0.05,]
SENDAIg <- test2

write.table(SENDAI,"/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/noSRs/results_newthres/DEreps_TEtrans_SeV_FDR0.05.txt",sep="\t",quote=FALSE)
write.table(SENDAIg,"/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/noSRs/results_newthres/DEgenes_TEtrans_SeV_FDR0.05.txt",sep="\t",quote=FALSE)

print("SeV")
# repeats that are up and down
dim(SENDAI)
upSENDAI <- SENDAI[SENDAI$logFC < 0,]
dim(upSENDAI)
downSENDAI <- SENDAI[SENDAI$logFC > 0,]
dim(downSENDAI)

upSENDAI<- do.call(rbind,strsplit(as.character(rownames(upSENDAI)),":"))
downSENDAI <- do.call(rbind,strsplit(as.character(rownames(downSENDAI)),":"))
table(upSENDAI[,3])
table(downSENDAI[,3])

upSENDAI_g <- SENDAIg[SENDAIg$logFC < 0,]
downSENDAI_g <- SENDAIg[SENDAIg$logFC > 0,]
dim(upSENDAI_g)
dim(downSENDAI_g)
dim(test)
dim(test2)


##########################################################################################
##########################################################################################
##
## TEtranscripts - ZIKA - HUMAN 
##
##########################################################################################
##########################################################################################


### Load data
data <- read.delim("/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/noSRs/TEtrans_ZKV.cntTable",sep="\t",header=TRUE,row.names="gene.TE")
colnames(data) <- sub("bams.","",colnames(data))
colnames(data) <- sub("Aligned.sortedByCoord.out.bam.C","",colnames(data))
colnames(data) <- sub("Aligned.sortedByCoord.out.bam.T","",colnames(data))

###  List virus genes, rRNAs

###  Virus IDs
hg38.viruses <- read.delim("/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/virus.genes.hg38.txt",sep="\t",header=FALSE)


library(edgeR)

# subset on positive and mock
data2 <- data[,c(3,4,5,7,8,9)] 

# subset on negative and mock
#data2 <- data[,c(1,2,6,7,8,9)] 

# create normalized count matrix
ZKV_cpm <- cpm(data2)

data2 <- data2[!rownames(data2) =="AMB18850.1",]
y <- DGEList(counts=data2,group=c(1,1,1,2,2,2))
keep <- rowSums(cpm(y)>1) >= 3
y <- y[keep, , keep.lib.sizes=FALSE]
y <- calcNormFactors(y)
y <- estimateDisp(y)
y <- estimateCommonDisp(y)
y <- estimateTagwiseDisp(y)
et <- exactTest(y)
tt <- topTags(et,n=dim(data2)[1])
tt <- tt$table
test <- subset(tt,!grepl("^EN",rownames(tt)))
test <- test[test$FDR < 0.05,]
ZKV <- test
ZKV_cpm_de <- ZKV_cpm[rownames(ZKV_cpm) %in% rownames(test),]
test2 <- subset(tt,grepl("^EN",rownames(tt)))
test2 <- test2[test2$FDR < 0.05,]
ZKVg <- test2


write.table(ZKV,"/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/noSRs/results_newthres/DEreps_TEtrans_ZKV_FDR0.05.txt",sep="\t",quote=FALSE)
write.table(ZKVg,"/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/noSRs/results_newthres/DEgenes_TEtrans_ZKV_FDR0.05.txt",sep="\t",quote=FALSE)


print("ZIKV")
# repeats that are up and down
dim(ZKV)
upZKV <- ZKV[ZKV$logFC < 0,]
dim(upZKV)
downZKV <- ZKV[ZKV$logFC > 0,]
dim(downZKV)

upZKV<- do.call(rbind,strsplit(as.character(rownames(upZKV)),":"))
downZKV <- do.call(rbind,strsplit(as.character(rownames(downZKV)),":"))
table(upZKV[,3])
table(downZKV[,3])

upZKV_g <- ZKVg[ZKVg$logFC < 0,]
downZKV_g <- ZKVg[ZKVg$logFC > 0,]
dim(upZKV_g)
dim(downZKV_g)

dim(test)
dim(test2)




##########################################################################################
##########################################################################################
##
## TEtranscripts - EBOV (ARPE-19 cells) - HUMAN 
##
##########################################################################################
##########################################################################################


### Load data
data <- read.delim("/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/noSRs/TEtrans_EBOV.cntTable",sep="\t",header=TRUE,row.names="gene.TE")
colnames(data) <- sub("bams.","",colnames(data))
colnames(data) <- sub("Aligned.sortedByCoord.out.bam.C","",colnames(data))
colnames(data) <- sub("Aligned.sortedByCoord.out.bam.T","",colnames(data))

###  List virus genes, rRNAs

###  Virus IDs
hg38.viruses <- read.delim("/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/virus.genes.hg38.txt",sep="\t",header=FALSE)


library(edgeR)

# create normalized count matrix
EBOV_cpm <- cpm(data)

data <- data[!rownames(data) %in% hg38.viruses$V1,]
y <- DGEList(counts=data,group=c(1,1,1,2,2,2))
keep <- rowSums(cpm(y)>1) >= 3
y <- y[keep, , keep.lib.sizes=FALSE]
y <- calcNormFactors(y)
y <- estimateDisp(y)
y <- estimateCommonDisp(y)
y <- estimateTagwiseDisp(y)
et <- exactTest(y)
tt <- topTags(et,n=dim(data2)[1])
tt <- tt$table
test <- subset(tt,!grepl("^EN",rownames(tt)))
test <- test[test$FDR < 0.05,]
data2_reps <- data2[rownames(data2) %in% rownames(test),]
EBOV_cpm_de <- EBOV_cpm[rownames(EBOV_cpm) %in% rownames(test),]
EBOV <- test
test2 <- subset(tt,grepl("^EN",rownames(tt)))
test2 <- test2[test2$FDR < 0.05,]
EBOVg <- test2


write.table(EBOV,"/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/noSRs/results_newthres/DEreps_TEtrans_EBOV_FDR0.05.txt",sep="\t",quote=FALSE)
write.table(EBOVg,"/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/noSRs/results_newthres/DEgenes_TEtrans_EBOV_FDR0.05.txt",sep="\t",quote=FALSE)


print("EBOV")
# repeats that are up and down
dim(EBOV)
upEBOV <- EBOV[EBOV$logFC < 0,]
dim(upEBOV)
downEBOV <- EBOV[EBOV$logFC > 0,]
dim(downEBOV)

upEBOV<- do.call(rbind,strsplit(as.character(rownames(upEBOV)),":"))
downEBOV <- do.call(rbind,strsplit(as.character(rownames(downEBOV)),":"))
table(upEBOV[,3])
table(downEBOV[,3])

upEBOV_g <- EBOVg[EBOVg$logFC < 0,]
downEBOV_g <- EBOVg[EBOVg$logFC > 0,]
dim(upEBOV_g)
dim(downEBOV_g)

dim(test)
dim(test2)
##########################################################################################
##########################################################################################
##
## TEtranscripts - EBOV (CD4 T cells) - HUMAN 
##
##########################################################################################
##########################################################################################


### Load data
data <- read.delim("/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/noSRs/TEtrans_EBOV_CD4T.cntTable",sep="\t",header=TRUE,row.names="gene.TE")
colnames(data) <- sub("bams.","",colnames(data))
colnames(data) <- sub("Aligned.sortedByCoord.out.bam.C","",colnames(data))
colnames(data) <- sub("Aligned.sortedByCoord.out.bam.T","",colnames(data))

###  List virus genes, rRNAs

###  Virus IDs
hg38.viruses <- read.delim("/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/virus.genes.hg38.txt",sep="\t",header=FALSE)

library(edgeR)

# create normalized count matrix
EBOV_CD4T_cpm <- cpm(data)

data2 <- data[!rownames(data) %in% hg38.viruses$V1,]
y <- DGEList(counts=data2,group=c(1,1,1,1,2,2,2,2))
keep <- rowSums(cpm(y)>1) >= 4
y <- y[keep, , keep.lib.sizes=FALSE]
y <- calcNormFactors(y)
y <- estimateDisp(y)
y <- estimateCommonDisp(y)
y <- estimateTagwiseDisp(y)
et <- exactTest(y)
tt <- topTags(et,n=dim(data2)[1])
tt <- tt$table
test <- subset(tt,!grepl("^EN",rownames(tt)))
test <- test[test$FDR < 0.05,]
data2_reps <- data2[rownames(data2) %in% rownames(test),]
EBOV_cpm_de <- EBOV_cpm[rownames(EBOV_cpm) %in% rownames(test),]
EBOVt <- test
test2 <- subset(tt,grepl("^EN",rownames(tt)))
test2 <- test2[test2$FDR < 0.05,]
EBOVtg <- test2

write.table(EBOVt,"/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/noSRs/results_newthres/DEreps_TEtrans_EBOVtcell_FDR0.05.txt",sep="\t",quote=FALSE)
write.table(EBOVtg,"/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/noSRs/results_newthres/DEgenes_TEtrans_EBOVtcell_FDR0.05.txt",sep="\t",quote=FALSE)


print("EBOVt")
# repeats that are up and down
dim(EBOVt)
upEBOVt <- EBOVt[EBOVt$logFC < 0,]
dim(upEBOVt)
downEBOVt <- EBOVt[EBOVt$logFC > 0,]
dim(downEBOVt)

upEBOVt<- do.call(rbind,strsplit(as.character(rownames(upEBOVt)),":"))
downEBOVt <- do.call(rbind,strsplit(as.character(rownames(downEBOVt)),":"))
table(upEBOVt[,3])
table(downEBOVt[,3])

upEBOVt_g <- EBOVtg[EBOVtg$logFC < 0,]
downEBOVt_g <- EBOVtg[EBOVtg$logFC > 0,]
dim(upEBOVt_g)
dim(downEBOVt_g)

dim(test)
dim(test2)

##########################################################################################
##########################################################################################
##
## TEtranscripts - HRSV - HUMAN 
##
##########################################################################################
##########################################################################################


### Load data
data <- read.delim("/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/noSRs/TEtrans_HRSV.cntTable",sep="\t",header=TRUE,row.names="gene.TE")
colnames(data) <- sub("bams.","",colnames(data))
colnames(data) <- sub("Aligned.sortedByCoord.out.bam.C","",colnames(data))
colnames(data) <- sub("Aligned.sortedByCoord.out.bam.T","",colnames(data))

###  List virus genes, rRNAs

###  Virus IDs
hg38.viruses <- read.delim("/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/virus.genes.hg38.txt",sep="\t",header=FALSE)



library(edgeR)

# create normalized count matrix
HRSV_cpm <- cpm(data)
#HRSV_tpm <- tpm(data,master_gene_hg38)

data <- data[!rownames(data) %in% hg38.viruses$V1,]
y <- DGEList(counts=data,group=c(1,1,1,2,2))
keep <- rowSums(cpm(y)>1) >= 2
y <- y[keep, , keep.lib.sizes=FALSE]
y <- calcNormFactors(y)
y <- estimateDisp(y)
y <- estimateCommonDisp(y)
y <- estimateTagwiseDisp(y)
et <- exactTest(y)
tt <- topTags(et,n=dim(data)[1])
tt <- tt$table
test <- subset(tt,!grepl("^EN",rownames(tt)))
test <- test[test$FDR < 0.05,]
data2_reps <- data2[rownames(data2) %in% rownames(test),]
HRSV_cpm_de <- HRSV_cpm[rownames(HRSV_cpm) %in% rownames(test),]
#HRSV_tpm_de <- HRSV_tpm[rownames(HRSV_tpm) %in% rownames(test),]
HRSV <- test
test2 <- subset(tt,grepl("^EN",rownames(tt)))
test2 <- test2[test2$FDR < 0.05,]
HRSVg <- test2

write.table(HRSV,"/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/noSRs/results_newthres/DEreps_TEtrans_HRSV_FDR0.05.txt",sep="\t",quote=FALSE)
write.table(HRSVg,"/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/noSRs/results_newthres/DEgenes_TEtrans_HRSV_FDR0.05.txt",sep="\t",quote=FALSE)

print("HRSV")
# repeats that are up and down
dim(HRSV)
upHRSV <- HRSV[HRSV$logFC < 0,]
dim(upHRSV)
downHRSV <- HRSV[HRSV$logFC > 0,]
dim(downHRSV)

upHRSV<- do.call(rbind,strsplit(as.character(rownames(upHRSV)),":"))
downHRSV <- do.call(rbind,strsplit(as.character(rownames(downHRSV)),":"))
table(upHRSV[,3])
table(downHRSV[,3])

upHRSV_g <- HRSVg[HRSVg$logFC < 0,]
downHRSV_g <- HRSVg[HRSVg$logFC > 0,]
dim(upHRSV_g)
dim(downHRSV_g)

dim(test)
dim(test2)

##########################################################################################
##########################################################################################
##
## TEtranscripts - VZV - HUMAN 
##
##########################################################################################
##########################################################################################



### Load data
data <- read.delim("/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/noSRs/TEtrans_VZV.cntTable",sep="\t",header=TRUE,row.names="gene.TE")
colnames(data) <- sub("bams.","",colnames(data))
colnames(data) <- sub("Aligned.sortedByCoord.out.bam.C","",colnames(data))
colnames(data) <- sub("Aligned.sortedByCoord.out.bam.T","",colnames(data))

###  List virus genes, rRNAs

###  Virus IDs
hg38.viruses <- read.delim("/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/virus.genes.hg38.txt",sep="\t",header=FALSE)


library(edgeR)

# create normalized count matrix
VZV_cpm <- cpm(data)

data2 <- data[!rownames(data) %in% hg38.viruses$V1,]
y <- DGEList(counts=data2,group=c(1,1,2,2))
keep <- rowSums(cpm(y)>1) >= 2
y <- y[keep, , keep.lib.sizes=FALSE]
y <- calcNormFactors(y)
y <- estimateDisp(y)
y <- estimateCommonDisp(y)
y <- estimateTagwiseDisp(y)
et <- exactTest(y)
tt <- topTags(et,n=dim(data2)[1])
tt <- tt$table
test <- subset(tt,!grepl("^EN",rownames(tt)))
test <- test[test$FDR < 0.05,]
data2_reps <- data2[rownames(data2) %in% rownames(test),]
VZV_cpm_de <- VZV_cpm[rownames(VZV_cpm) %in% rownames(test),]
VZV <- test
test2 <- subset(tt,grepl("^EN",rownames(tt)))
test2 <- test2[test2$FDR < 0.05,]
VZVg <- test2

write.table(VZV,"/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/noSRs/results_newthres/DEreps_TEtrans_VZV_FDR0.05.txt",sep="\t",quote=FALSE)
write.table(VZVg,"/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/noSRs/results_newthres/DEgenes_TEtrans_VZV_FDR0.05.txt",sep="\t",quote=FALSE)


print("VZV")
# repeats that are up and down
dim(VZV)
upVZV <- VZV[VZV$logFC < 0,]
dim(upVZV)
downVZV <- VZV[VZV$logFC > 0,]
dim(downVZV)

upVZV<- do.call(rbind,strsplit(as.character(rownames(upVZV)),":"))
downVZV <- do.call(rbind,strsplit(as.character(rownames(downVZV)),":"))
table(upVZV[,3])
table(downVZV[,3])

upVZV_g <- VZVg[VZVg$logFC < 0,]
downVZV_g <- VZVg[VZVg$logFC > 0,]
dim(upVZV_g)
dim(downVZV_g)

dim(test)
dim(test2)


##########################################################################################
##########################################################################################
##
## TEtranscripts - RVFV - HUMAN 
##
##########################################################################################
##########################################################################################

### Load data
data <- read.delim("/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/noSRs/TEtrans_RVFV.cntTable",sep="\t",header=TRUE,row.names="gene.TE")
colnames(data) <- sub("bams.","",colnames(data))
colnames(data) <- sub("Aligned.sortedByCoord.out.bam.C","",colnames(data))
colnames(data) <- sub("Aligned.sortedByCoord.out.bam.T","",colnames(data))

###  List virus genes, rRNAs

###  Virus IDs
hg38.viruses <- read.delim("/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/virus.genes.hg38.txt",sep="\t",header=FALSE)


library(edgeR)

# create normalized count matrix
RVFV_cpm <- cpm(data)


# RVFV inf versus mock
data2 <- data[,c(1,3,5,7,8,9)]
data2 <- data2[!rownames(data2) %in% hg38.viruses$V1,]
y <- DGEList(counts=data2,group=c(1,1,1,2,2,2))
keep <- rowSums(cpm(y)>1) >= 3
y <- y[keep, , keep.lib.sizes=FALSE]
y <- calcNormFactors(y)
y <- estimateDisp(y)
y <- estimateCommonDisp(y)
y <- estimateTagwiseDisp(y)
et <- exactTest(y)
tt <- topTags(et,n=dim(data2)[1])
tt <- tt$table
test <- subset(tt,!grepl("^EN",rownames(tt)))
test <- test[test$FDR < 0.05,]
data2_reps <- data2[rownames(data2) %in% rownames(test),]
RVFV_cpm_de <- RVFV_cpm[rownames(RVFV_cpm) %in% rownames(test),]
RVFV <- test
test2 <- subset(tt,grepl("^EN",rownames(tt)))
test2 <- test2[test2$FDR < 0.05,]
RVFVg <- test2


print("RVFV")
# repeats that are up and down
dim(RVFV)
upRVFV <- RVFV[RVFV$logFC < 0,]
dim(upRVFV)
downRVFV <- RVFV[RVFV$logFC > 0,]
dim(downRVFV)

upRVFV<- do.call(rbind,strsplit(as.character(rownames(upRVFV)),":"))
downRVFV <- do.call(rbind,strsplit(as.character(rownames(downRVFV)),":"))
table(upRVFV[,3])
table(downRVFV[,3])

upRVFV_g <- RVFVg[RVFVg$logFC < 0,]
downRVFV_g <- RVFVg[RVFVg$logFC > 0,]
dim(upRVFV_g)
dim(downRVFV_g)

dim(test)
dim(test2)


# RVFV inf strain ZH548 versus mock
data2 <- data[,c(2,4,6,7,8,9)]

y <- DGEList(counts=data2,group=c(1,1,1,2,2,2))
keep <- rowSums(cpm(y)>1) >= 3
y <- y[keep, , keep.lib.sizes=FALSE]
y <- calcNormFactors(y)
y <- estimateDisp(y)
y <- estimateCommonDisp(y)
y <- estimateTagwiseDisp(y)
et <- exactTest(y)
tt <- topTags(et,n=dim(data2)[1])
tt <- tt$table
test <- subset(tt,!grepl("^EN",rownames(tt)))
test <- test[test$FDR < 0.05,]
data2_reps <- data2[rownames(data2) %in% rownames(test),]
RVFV_ZH548_cpm_de <- RVFV_cpm[rownames(RVFV_cpm) %in% rownames(test),]
RVFV_ZH548 <- test
test2 <- subset(tt,grepl("^EN",rownames(tt)))
test2 <- test2[test2$FDR < 0.05,]
RVFVg_ZH548 <- test2

write.table(RVFV,"/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/noSRs/results_newthres/DEreps_TEtrans_RVFV_FDR0.05.txt",sep="\t",quote=FALSE)
write.table(RVFVg,"/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/noSRs/results_newthres/DEgenes_TEtrans_RVFV_FDR0.05.txt",sep="\t",quote=FALSE)

print("RVFV")
upRVFV_ZH548 <- RVFV_ZH548[RVFV_ZH548$logFC < 0 & !rownames(RVFV_ZH548) %in% hg38.viruses$V1,]
downRVFV_ZH548 <- RVFV_ZH548[RVFV_ZH548$logFC > 0 & !rownames(RVFV_ZH548) %in% hg38.viruses$V1,]

upRVFV_ZH548 <- do.call(rbind,strsplit(as.character(rownames(upRVFV_ZH548)),":"))
downRVFV_ZH548 <- do.call(rbind,strsplit(as.character(rownames(downRVFV_ZH548)),":"))
table(upRVFV_ZH548[,3])
table(downRVFV_ZH548[,3])
dim(test)
dim(test2)


##########################################################################################
##########################################################################################
##
## TEtranscripts - ORFV - HUMAN 
##
##########################################################################################
##########################################################################################



### Load data
data <- read.delim("/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/noSRs/TEtrans_ORFV.cntTable",sep="\t",header=TRUE,row.names="gene.TE")
colnames(data) <- sub("bams.","",colnames(data))
colnames(data) <- sub("Aligned.sortedByCoord.out.bam.C","",colnames(data))
colnames(data) <- sub("Aligned.sortedByCoord.out.bam.T","",colnames(data))

###  List virus genes, rRNAs

###  Virus IDs
hg38.viruses <- read.delim("/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/virus.genes.hg38.txt",sep="\t",header=FALSE)



library(edgeR)

# create normalized count matrix
ORFV_cpm <- cpm(data)
#ORFV_tpm <- tpm(data,master_gene_hg38)
 
data <- data[!rownames(data) %in% hg38.viruses$V1 & !rownames(data) %in% "ORFV_gs_neg",]
y <- DGEList(counts=data,group=c(1,1,1,2,2,2))
keep <- rowSums(cpm(y)>1) >= 3
y <- y[keep, , keep.lib.sizes=FALSE]
y <- calcNormFactors(y)
y <- estimateDisp(y)
y <- estimateCommonDisp(y)
y <- estimateTagwiseDisp(y)
et <- exactTest(y)
tt <- topTags(et,n=dim(data)[1])
tt <- tt$table
test <- subset(tt,!grepl("^EN",rownames(tt)))
test <- test[test$FDR < 0.05,]
data_reps <- data[rownames(data) %in% rownames(test),]
ORFV_cpm_de <- ORFV_cpm[rownames(ORFV_cpm) %in% rownames(test),]
ORFV <- test
test2 <- subset(tt,grepl("^EN",rownames(tt)))
test2 <- test2[test2$FDR < 0.05,]
ORFVg <- test2

write.table(ORFV,"/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/noSRs/results_newthres/DEreps_TEtrans_ORFV_FDR0.05.txt",sep="\t",quote=FALSE)
write.table(ORFVg,"/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/noSRs/results_newthres/DEgenes_TEtrans_ORFV_FDR0.05.txt",sep="\t",quote=FALSE)


print("ORFV")
# repeats that are up and down
dim(ORFV)
upORFV <- ORFV[ORFV$logFC < 0,]
dim(upORFV)
downORFV <- ORFV[ORFV$logFC > 0,]
dim(downORFV)

upORFV<- do.call(rbind,strsplit(as.character(rownames(upORFV)),":"))
downORFV <- do.call(rbind,strsplit(as.character(rownames(downORFV)),":"))
table(upORFV[,3])
table(downORFV[,3])

upORFV_g <- ORFVg[ORFVg$logFC < 0,]
downORFV_g <- ORFVg[ORFVg$logFC > 0,]
dim(upORFV_g)
dim(downORFV_g)
dim(test)
dim(test2)




##########################################################################################
##########################################################################################
##
## TEtranscripts - DFV (huh-7.5) - HUMAN 
##
##########################################################################################
##########################################################################################



### Load data
data <- read.delim("/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/noSRs/TEtrans_DFV.cntTable",sep="\t",header=TRUE,row.names="gene.TE")
colnames(data) <- sub("bams.","",colnames(data))
colnames(data) <- sub("Aligned.sortedByCoord.out.bam.C","",colnames(data))
colnames(data) <- sub("Aligned.sortedByCoord.out.bam.T","",colnames(data))

###  List virus genes, rRNAs

###  Virus IDs
hg38.viruses <- read.delim("/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/virus.genes.hg38.txt",sep="\t",header=FALSE)

###  rRNA IDs
rRNAs <- subset(rownames(data),grepl("rRNA$",rownames(data)))


library(edgeR)

# create normalized count matrix
DFV_cpm <- cpm(data)

data <- data[!rownames(data) %in% hg38.viruses$V1,]
y <- DGEList(counts=data,group=c(1,1,1,2,2,2))
keep <- rowSums(cpm(y)>1) >= 3
y <- y[keep, , keep.lib.sizes=FALSE]
y <- calcNormFactors(y)
y <- estimateDisp(y)
y <- estimateCommonDisp(y)
y <- estimateTagwiseDisp(y)
et <- exactTest(y)
tt <- topTags(et,n=dim(data2)[1])
tt <- tt$table
test <- subset(tt,!grepl("^EN",rownames(tt)))
test <- test[test$FDR < 0.05,]
data2_reps <- data2[rownames(data2) %in% rownames(test),]
DFV_cpm_de <- DFV_cpm[rownames(DFV_cpm) %in% rownames(test),]
DFV <- test
test2 <- subset(tt,grepl("^EN",rownames(tt)))
test2 <- test2[test2$FDR < 0.05,]
DFVg <- test2

write.table(DFV,"/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/noSRs/results_newthres/DEreps_TEtrans_DFV_FDR0.05.txt",sep="\t",quote=FALSE)
write.table(DFVg,"/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/noSRs/results_newthres/DEgenes_TEtrans_DFV_FDR0.05.txt",sep="\t",quote=FALSE)



print("DFV")
# repeats that are up and down
dim(DFV)
upDFV <- DFV[DFV$logFC < 0,]
dim(upDFV)
downDFV <- DFV[DFV$logFC > 0,]
dim(downDFV)

upDFV<- do.call(rbind,strsplit(as.character(rownames(upDFV)),":"))
downDFV <- do.call(rbind,strsplit(as.character(rownames(downDFV)),":"))
table(upDFV[,3])
table(downDFV[,3])

upDFV_g <- DFVg[DFVg$logFC < 0,]
downDFV_g <- DFVg[DFVg$logFC > 0,]
dim(upDFV_g)
dim(downDFV_g)
dim(test)
dim(test2)


##########################################################################################
##########################################################################################
##
## TEtranscripts - HSV1 - HUMAN 
##
##########################################################################################
##########################################################################################


### Load data
data <- read.delim("/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/noSRs/TEtrans_HSV-1.cntTable",sep="\t",header=TRUE,row.names="gene.TE")
colnames(data) <- sub("bams.","",colnames(data))
colnames(data) <- sub("Aligned.sortedByCoord.out.bam.C","",colnames(data))
colnames(data) <- sub("Aligned.sortedByCoord.out.bam.T","",colnames(data))

###  List virus genes, rRNAs

###  Virus IDs
hg38.viruses <- read.delim("/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/virus.genes.hg38.txt",sep="\t",header=FALSE)



library(edgeR)

# create normalized count matrix
HSV1_cpm <- cpm(data)


data <- data[!rownames(data) %in% hg38.viruses$V1,]
y <- DGEList(counts=data,group=c(1,2,1,2))
keep <- rowSums(cpm(y)>1) >= 2
y <- y[keep, , keep.lib.sizes=FALSE]
y <- calcNormFactors(y)
y <- estimateDisp(y)
y <- estimateCommonDisp(y)
y <- estimateTagwiseDisp(y)
et <- exactTest(y)
tt <- topTags(et,n=dim(data2)[1])
tt <- tt$table
test <- subset(tt,!grepl("^EN",rownames(tt)))
test <- test[test$FDR < 0.05,]
data2_reps <- data2[rownames(data2) %in% rownames(test),]
HSV1_cpm_de <- HSV1_cpm[rownames(HSV1_cpm) %in% rownames(test),]
HSV1 <- test
test2 <- subset(tt,grepl("^EN",rownames(tt)))
test2 <- test2[test2$FDR < 0.05,]
HSV1g <- test2

write.table(HSV1,"/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/noSRs/results_newthres/DEreps_TEtrans_HSV1_FDR0.05.txt",sep="\t",quote=FALSE)
write.table(HSV1g,"/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/noSRs/results_newthres/DEgenes_TEtrans_HSV1_FDR0.05.txt",sep="\t",quote=FALSE)


print("HSV-1")
# repeats that are up and down
dim(HSV1)
upHSV1 <- HSV1[HSV1$logFC < 0,]
dim(upHSV1)
downHSV1 <- HSV1[HSV1$logFC > 0,]
dim(downHSV1)

upHSV1<- do.call(rbind,strsplit(as.character(rownames(upHSV1)),":"))
downHSV1 <- do.call(rbind,strsplit(as.character(rownames(downHSV1)),":"))
table(upHSV1[,3])
table(downHSV1[,3])

upHSV1_g <- HSV1g[HSV1g$logFC < 0,]
downHSV1_g <- HSV1g[HSV1g$logFC > 0,]
dim(upHSV1_g)
dim(downHSV1_g)


##########################################################################################
##########################################################################################
##
## TEtranscripts - EBV - HUMAN 
##
##########################################################################################
##########################################################################################



### Load data
data <- read.delim("/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/noSRs/TEtrans_EBV.cntTable",sep="\t",header=TRUE,row.names="gene.TE")
colnames(data) <- sub("bams.","",colnames(data))
colnames(data) <- sub("Aligned.sortedByCoord.out.bam.C","",colnames(data))
colnames(data) <- sub("Aligned.sortedByCoord.out.bam.T","",colnames(data))

###  List virus genes, rRNAs

###  Virus IDs
hg38.viruses <- read.delim("/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/virus.genes.hg38.txt",sep="\t",header=FALSE)



library(edgeR)

# create normalized count matrix
EBV_cpm <- cpm(data)

data <- data[!rownames(data) %in% hg38.viruses$V1,]
y <- DGEList(counts=data,group=c(1,1,1,2,2,2))
keep <- rowSums(cpm(y)>1) >= 3
y <- y[keep, , keep.lib.sizes=FALSE]
y <- calcNormFactors(y)
y <- estimateDisp(y)
y <- estimateCommonDisp(y)
y <- estimateTagwiseDisp(y)
et <- exactTest(y)
tt <- topTags(et,n=dim(data2)[1])
tt <- tt$table
test <- subset(tt,!grepl("^EN",rownames(tt)))
test <- test[test$FDR < 0.05,]
data2_reps <- data2[rownames(data2) %in% rownames(test),]
EBV_cpm_de <- EBV_cpm[rownames(EBV_cpm) %in% rownames(test),]
EBV <- test
test2 <- subset(tt,grepl("^EN",rownames(tt)))
test2 <- test2[test2$FDR < 0.05,]
EBVg <- test2

write.table(EBV,"/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/noSRs/results_newthres/DEreps_TEtrans_EBV_FDR0.05.txt",sep="\t",quote=FALSE)
write.table(EBVg,"/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/noSRs/results_newthres/DEgenes_TEtrans_EBV_FDR0.05.txt",sep="\t",quote=FALSE)



print("EBV")
# repeats that are up and down
dim(EBV)
upEBV <- EBV[EBV$logFC < 0,]
dim(upEBV)
downEBV <- EBV[EBV$logFC > 0,]
dim(downEBV)

upEBV<- do.call(rbind,strsplit(as.character(rownames(upEBV)),":"))
downEBV <- do.call(rbind,strsplit(as.character(rownames(downEBV)),":"))
table(upEBV[,3])
table(downEBV[,3])

upEBV_g <- EBVg[EBVg$logFC < 0,]
downEBV_g <- EBVg[EBVg$logFC > 0,]
dim(upEBV_g)
dim(downEBV_g)

dim(test)
dim(test2)


##########################################################################################
##########################################################################################
##
## TEtranscripts - SINV - HUMAN 
##
##########################################################################################
##########################################################################################

### Load data
data <- read.delim("/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/noSRs/TEtrans_SINV.cntTable",sep="\t",header=TRUE,row.names="gene.TE")
colnames(data) <- sub("bams.","",colnames(data))
colnames(data) <- sub("Aligned.sortedByCoord.out.bam.C","",colnames(data))
colnames(data) <- sub("Aligned.sortedByCoord.out.bam.T","",colnames(data))

###  List virus genes, rRNAs

###  Virus IDs
hg38.viruses <- read.delim("/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/virus.genes.hg38.txt",sep="\t",header=FALSE)


library(edgeR)

# create normalized count matrix
SINV_cpm <- cpm(data)

data <- data[!rownames(data) %in% hg38.viruses$V1,]
y <- DGEList(counts=data,group=c(1,1,1,2,2,2))
keep <- rowSums(cpm(y)>1) >= 3
y <- y[keep, , keep.lib.sizes=FALSE]
y <- calcNormFactors(y)
y <- estimateDisp(y)
y <- estimateCommonDisp(y)
y <- estimateTagwiseDisp(y)
et <- exactTest(y)
tt <- topTags(et,n=dim(data)[1])
tt <- tt$table
test <- subset(tt,!grepl("^EN",rownames(tt)))
test <- test[test$FDR < 0.05,]
SINV_cpm_de <- SINV_cpm[rownames(SINV_cpm) %in% rownames(test),]
SINV <- test
test2 <- subset(tt,grepl("^EN",rownames(tt)))
test2 <- test2[test2$FDR < 0.05,]
SINVg <- test2

write.table(SINV,"/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/noSRs/results_newthres/DEreps_TEtrans_SINV_FDR0.05.txt",sep="\t",quote=FALSE)
write.table(SINVg,"/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/noSRs/results_newthres/DEgenes_TEtrans_SINV_FDR0.05.txt",sep="\t",quote=FALSE)


print("SINV")

# repeats that are up and down
dim(SINV)
upSINV <- SINV[SINV$logFC < 0,]
dim(upSINV)
downSINV <- SINV[SINV$logFC > 0,]
dim(downSINV)

upSINV<- do.call(rbind,strsplit(as.character(rownames(upSINV)),":"))
downSINV <- do.call(rbind,strsplit(as.character(rownames(downSINV)),":"))
table(upSINV[,3])
table(downSINV[,3])

upSINV_g <- SINVg[SINVg$logFC < 0,]
downSINV_g <- SINVg[SINVg$logFC > 0,]
dim(upSINV_g)
dim(downSINV_g)
dim(test)
dim(test2)




##########################################################################################
##########################################################################################
##
## TEtranscripts - HCMV - HUMAN 
##
##########################################################################################
##########################################################################################


### Load data
data <- read.delim("/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/noSRs/TEtrans_HCMV.cntTable",sep="\t",header=TRUE,row.names="gene.TE")
colnames(data) <- sub("bams.","",colnames(data))
colnames(data) <- sub("Aligned.sortedByCoord.out.bam.C","",colnames(data))
colnames(data) <- sub("Aligned.sortedByCoord.out.bam.T","",colnames(data))


library(edgeR)

# create normalized count matrix
HCMV_cpm <- cpm(data)

data <- data[!rownames(data) %in% hg38.viruses$V1,]
y <- DGEList(counts=data,group=c(1,1,1,2,2,2))
keep <- rowSums(cpm(y)>1) >= 3
y <- y[keep, , keep.lib.sizes=FALSE]
y <- calcNormFactors(y)
y <- estimateDisp(y)
y <- estimateCommonDisp(y)
y <- estimateTagwiseDisp(y)
et <- exactTest(y)
tt <- topTags(et,n=dim(data)[1])
tt <- tt$table
test <- subset(tt,!grepl("^EN",rownames(tt)))
test <- test[test$FDR < 0.05,]
HCMV_cpm_de <- HCMV_cpm[rownames(HCMV_cpm) %in% rownames(test),]
HCMV <- test
test2 <- subset(tt,grepl("^EN",rownames(tt)))
test2 <- test2[test2$FDR < 0.05,]
HCMVg <- test2

write.table(HCMV,"/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/noSRs/results_newthres/DEreps_TEtrans_HCMV_FDR0.05.txt",sep="\t",quote=FALSE)
write.table(HCMVg,"/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/noSRs/results_newthres/DEgenes_TEtrans_HCMV_FDR0.05.txt",sep="\t",quote=FALSE)



print("HCMV")
# repeats that are up and down
dim(HCMV)
upHCMV <- HCMV[HCMV$logFC < 0,]
dim(upHCMV)
downHCMV <- HCMV[HCMV$logFC > 0,]
dim(downHCMV)

upHCMV<- do.call(rbind,strsplit(as.character(rownames(upHCMV)),":"))
downHCMV <- do.call(rbind,strsplit(as.character(rownames(downHCMV)),":"))
table(upHCMV[,3])
table(downHCMV[,3])

upHCMV_g <- HCMVg[HCMVg$logFC < 0,]
downHCMV_g <- HCMVg[HCMVg$logFC > 0,]
dim(upHCMV_g)
dim(downHCMV_g)

dim(test)
dim(test2)



##########################################################################################
##########################################################################################
##
## TEtranscripts - MeV - HUMAN 
##
##########################################################################################
##########################################################################################


### Load data
data <- read.delim("/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/noSRs/TEtrans_MeV.cntTable",sep="\t",header=TRUE,row.names="gene.TE")
colnames(data) <- sub("bams.","",colnames(data))
colnames(data) <- sub("Aligned.sortedByCoord.out.bam.C","",colnames(data))
colnames(data) <- sub("Aligned.sortedByCoord.out.bam.T","",colnames(data))

###  List virus genes, rRNAs

###  Virus IDs
hg38.viruses <- read.delim("/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/virus.genes.hg38.txt",sep="\t",header=FALSE)


library(edgeR)

# create normalized count matrix
MeV_cpm <- cpm(data)

data <- data[!rownames(data) %in% hg38.viruses$V1,]
y <- DGEList(counts=data,group=c(1,1,1,2,2,2))
keep <- rowSums(cpm(y)>1) >= 3
y <- y[keep, , keep.lib.sizes=FALSE]
y <- calcNormFactors(y)
y <- estimateDisp(y)
y <- estimateCommonDisp(y)
y <- estimateTagwiseDisp(y)
et <- exactTest(y)
tt <- topTags(et,n=dim(data)[1])
tt <- tt$table
test <- subset(tt,!grepl("^EN",rownames(tt)))
test <- test[test$FDR < 0.05,]
MeV_cpm_de <- MeV_cpm[rownames(MeV_cpm) %in% rownames(test),]
MeV <- test
test2 <- subset(tt,grepl("^EN",rownames(tt)))
test2 <- test2[test2$FDR < 0.05,]
MeVg <- test2

write.table(MeV,"/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/noSRs/results_newthres/DEreps_TEtrans_MeV_FDR0.05.txt",sep="\t",quote=FALSE)
write.table(MeVg,"/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/noSRs/results_newthres/DEgenes_TEtrans_MeV_FDR0.05.txt",sep="\t",quote=FALSE)



print("MeV")
# repeats that are up and down
dim(MeV)
upMeV <- MeV[MeV$logFC < 0,]
dim(upMeV)
downMeV <- MeV[MeV$logFC > 0,]
dim(downMeV)

upMeV<- do.call(rbind,strsplit(as.character(rownames(upMeV)),":"))
downMeV <- do.call(rbind,strsplit(as.character(rownames(downMeV)),":"))
table(upMeV[,3])
table(downMeV[,3])

upMeV_g <- MeVg[MeVg$logFC < 0,]
downMeV_g <- MeVg[MeVg$logFC > 0,]
dim(upMeV_g)
dim(downMeV_g)
dim(test)
dim(test2)






##########################################################################################
##########################################################################################
##
## TEtranscripts - IAV - HUMAN
##
##########################################################################################
##########################################################################################


### Load data
data <- read.delim("/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/noSRs/TEtrans_IAV.cntTable",sep="\t",header=TRUE,row.names="gene.TE")
colnames(data) <- sub("bams.","",colnames(data))
colnames(data) <- sub("Aligned.sortedByCoord.out.bam.C","",colnames(data))
colnames(data) <- sub("Aligned.sortedByCoord.out.bam.T","",colnames(data))

###  List virus genes, rRNAs

###  Virus IDs
hg38.viruses <- read.delim("/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/virus.genes.hg38.txt",sep="\t",header=FALSE)


library(edgeR)

# create normalized count matrix
IAV_cpm <- cpm(data)

data <- data[!rownames(data) %in% hg38.viruses$V1,]
data <- subset(data,!grepl("Simple_repeat$",rownames(data)))
y <- DGEList(counts=data,group=c(1,1,2,2))
keep <- rowSums(cpm(y)>1) >= 2
y <- y[keep, , keep.lib.sizes=FALSE]
y <- calcNormFactors(y)
y <- estimateDisp(y)
y <- estimateCommonDisp(y)
y <- estimateTagwiseDisp(y)
et <- exactTest(y)
tt <- topTags(et,n=dim(data)[1])
tt <- tt$table
test <- subset(tt,!grepl("^EN",rownames(tt)))
test <- test[test$FDR < 0.05,]
IAV_cpm_de <- IAV_cpm[rownames(IAV_cpm) %in% rownames(test),]
IAV <- test
test2 <- subset(tt,grepl("^EN",rownames(tt)))
test2 <- test2[test2$FDR < 0.05,]
IAVg <- test2

write.table(IAV,"/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/noSRs/results_newthres/DEreps_TEtrans_IAV_FDR0.05.txt",sep="\t",quote=FALSE)
write.table(IAVg,"/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/noSRs/results_newthres/DEgenes_TEtrans_IAV_FDR0.05.txt",sep="\t",quote=FALSE)


print("IAV")
# repeats that are up and down
dim(IAV)
upIAV <- IAV[IAV$logFC < 0,]
dim(upIAV)
downIAV <- IAV[IAV$logFC > 0,]
dim(downIAV)

upIAV<- do.call(rbind,strsplit(as.character(rownames(upIAV)),":"))
downIAV <- do.call(rbind,strsplit(as.character(rownames(downIAV)),":"))
table(upIAV[,3])
table(downIAV[,3])

upIAV_g <- IAVg[IAVg$logFC < 0,]
downIAV_g <- IAVg[IAVg$logFC > 0,]
dim(upIAV_g)
dim(downIAV_g)
dim(test)
dim(test2)



##########################################################################################
##########################################################################################
##
## TEtranscripts - EBV (B-cells) - HUMAN 
##
##########################################################################################
##########################################################################################

### Load data
data <- read.delim("/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/noSRs/TEtrans_EBV.cntTable",sep="\t",header=TRUE,row.names="gene.TE")
colnames(data) <- sub("bams.","",colnames(data))
colnames(data) <- sub("Aligned.sortedByCoord.out.bam.C","",colnames(data))
colnames(data) <- sub("Aligned.sortedByCoord.out.bam.T","",colnames(data))

###  List virus genes, rRNAs

###  Virus IDs
hg38.viruses <- read.delim("/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/virus.genes.hg38.txt",sep="\t",header=FALSE)

### differential expression analysis 

library(edgeR)

# create normalized count matrix
data <- data[!rownames(data) %in% hg38.viruses$V1,]
EBV_cpm <- cpm(data)

y <- DGEList(counts=data,group=c(1,1,1,2,2,2))
keep <- rowSums(cpm(y)>1) >= 3
y <- y[keep, , keep.lib.sizes=FALSE]
y <- calcNormFactors(y)
y <- estimateDisp(y)
y <- estimateCommonDisp(y)
y <- estimateTagwiseDisp(y)
et <- exactTest(y)
tt <- topTags(et,n=dim(data)[1])
tt <- tt$table
test <- subset(tt,!grepl("^EN",rownames(tt)))
test <- test[test$FDR < 0.05,]
data_reps <- data[rownames(data) %in% rownames(test),]
EBV_cpm_de <- EBV_cpm[rownames(EBV_cpm) %in% rownames(test),]
#EBV_tpm_de <- EBV_tpm[rownames(EBV_tpm) %in% rownames(test),]
EBV <- test
test2 <- subset(tt,grepl("^EN",rownames(tt)))
test2 <- test2[test2$FDR < 0.05,]
EBVg <- test2

write.table(test,"/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/noSRs/results_newthres/DEreps_TEtrans_EBV_FDR0.05.txt",sep="\t",quote=FALSE)
write.table(test2,"/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/noSRs/results_newthres/DEgenes_TEtrans_EBV_FDR0.05.txt",sep="\t",quote=FALSE)

print("EBV")
# repeats that are up and down
dim(EBV)
upEBV <- EBV[EBV$logFC < 0,]
dim(upEBV)
downEBV <- EBV[EBV$logFC > 0,]
dim(downEBV)


upEBV<- do.call(rbind,strsplit(as.character(rownames(upEBV)),":"))
downEBV <- do.call(rbind,strsplit(as.character(rownames(downEBV)),":"))
table(upEBV[,3])
table(downEBV[,3])

upEBVg <- EBVg[EBVg$logFC < 0,]
downEBVg <- EBVg[EBVg$logFC > 0,]
dim(upEBVg)
dim(downEBVg)
dim(test)
dim(test2)




##########################################################################################
##########################################################################################
##
## TEtranscripts - EBOV_MDM - HUMAN 
##
##########################################################################################
##########################################################################################



### Load data
data <- read.delim("/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/noSRs/TEtrans_EBOV_MDM.cntTable",sep="\t",header=TRUE,row.names="gene.TE")
colnames(data) <- sub("bams.","",colnames(data))
colnames(data) <- sub("Aligned.sortedByCoord.out.bam.C","",colnames(data))
colnames(data) <- sub("Aligned.sortedByCoord.out.bam.T","",colnames(data))

###  List virus genes, rRNAs

###  Virus IDs
hg38.viruses <- read.delim("/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/virus.genes.hg38.txt",sep="\t",header=FALSE)


### differential expression analysis 

library(edgeR)

# create normalized count matrix
data <- data[!rownames(data) %in% hg38.viruses$V1,]
EBOV_MDM_cpm <- cpm(data)

y <- DGEList(counts=data,group=c(1,1,1,2,2,2))
keep <- rowSums(cpm(y)>1) >= 3
y <- y[keep, , keep.lib.sizes=FALSE]
y <- calcNormFactors(y)
y <- estimateDisp(y)
y <- estimateCommonDisp(y)
y <- estimateTagwiseDisp(y)
et <- exactTest(y)
tt <- topTags(et,n=dim(data)[1])
tt <- tt$table
test <- subset(tt,!grepl("^EN",rownames(tt)))
test <- test[test$FDR < 0.05,]
data_reps <- data[rownames(data) %in% rownames(test),]
EBOV_MDM_cpm_de <- EBOV_MDM_cpm[rownames(EBOV_MDM_cpm) %in% rownames(test),]
EBOV_MDM <- test
test2 <- subset(tt,grepl("^EN",rownames(tt)))
test2 <- test2[test2$FDR < 0.05,]
EBOV_MDMg <- test2

write.table(test,"/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/noSRs/results_newthres/DEreps_TEtrans_EBOV_MDM_FDR0.05.txt",sep="\t",quote=FALSE)
write.table(test2,"/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/noSRs/results_newthres/DEgenes_TEtrans_EBOV_MDM_FDR0.05.txt",sep="\t",quote=FALSE)

print("EBOV_MDM")
# repeats that are up and down
dim(EBOV_MDM)
upEBOV_MDM <- EBOV_MDM[EBOV_MDM$logFC < 0,]
dim(upEBOV_MDM)
downEBOV_MDM <- EBOV_MDM[EBOV_MDM$logFC > 0,]
dim(downEBOV_MDM)


upEBOV_MDM<- do.call(rbind,strsplit(as.character(rownames(upEBOV_MDM)),":"))
downEBOV_MDM <- do.call(rbind,strsplit(as.character(rownames(downEBOV_MDM)),":"))
table(upEBOV_MDM[,3])
table(downEBOV_MDM[,3])

upEBOV_MDMg <- EBOV_MDMg[EBOV_MDMg$logFC < 0,]
downEBOV_MDMg <- EBOV_MDMg[EBOV_MDMg$logFC > 0,]
dim(upEBOV_MDMg)
dim(downEBOV_MDMg)

dim(test)
dim(test2)



##########################################################################################
##########################################################################################
##
## TEtranscripts - RESTV - HUMAN 
##
##########################################################################################
##########################################################################################

### Load data
data <- read.delim("/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/noSRs/TEtrans_RESTV.cntTable",sep="\t",header=TRUE,row.names="gene.TE")
colnames(data) <- sub("bams.","",colnames(data))
colnames(data) <- sub("Aligned.sortedByCoord.out.bam.C","",colnames(data))
colnames(data) <- sub("Aligned.sortedByCoord.out.bam.T","",colnames(data))

###  List virus genes, rRNAs

###  Virus IDs
hg38.viruses <- read.delim("/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/virus.genes.hg38.txt",sep="\t",header=FALSE)



### differential expression analysis 

library(edgeR)

# create normalized count matrix
data <- data[!rownames(data) %in% hg38.viruses$V1,]
RESTV_cpm <- cpm(data)

y <- DGEList(counts=data,group=c(1,1,1,2,2,2))
keep <- rowSums(cpm(y)>1) >= 3
y <- y[keep, , keep.lib.sizes=FALSE]
y <- calcNormFactors(y)
y <- estimateDisp(y)
y <- estimateCommonDisp(y)
y <- estimateTagwiseDisp(y)
et <- exactTest(y)
tt <- topTags(et,n=dim(data)[1])
tt <- tt$table
test <- subset(tt,!grepl("^EN",rownames(tt)))
test <- test[test$FDR < 0.05,]
data_reps <- data[rownames(data) %in% rownames(test),]
RESTV_cpm_de <- RESTV_cpm[rownames(RESTV_cpm) %in% rownames(test),]
RESTV <- test
test2 <- subset(tt,grepl("^EN",rownames(tt)))
test2 <- test2[test2$FDR < 0.05,]
RESTVg <- test2

write.table(test,"/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/noSRs/results_newthres/DEreps_TEtrans_RESTV_FDR0.05.txt",sep="\t",quote=FALSE)
write.table(test2,"/Users/mmacchie/Desktop/TE_project/mouse_encode/TEtranscripts/viruses/hg38/noSRs/results_newthres/DEgenes_TEtrans_RESTV_FDR0.05.txt",sep="\t",quote=FALSE)

print("RESTV")
# repeats that are up and down
dim(RESTV)
upRESTV <- RESTV[RESTV$logFC < 0,]
dim(upRESTV)
downRESTV <- RESTV[RESTV$logFC > 0,]
dim(downRESTV)


upRESTV<- do.call(rbind,strsplit(as.character(rownames(upRESTV)),":"))
downRESTV <- do.call(rbind,strsplit(as.character(rownames(downRESTV)),":"))
table(upRESTV[,3])
table(downRESTV[,3])

upRESTVg <- RESTVg[RESTVg$logFC < 0,]
downRESTVg <- RESTVg[RESTVg$logFC > 0,]
dim(upRESTVg)
dim(downRESTVg)
dim(test)
dim(test2)




